name: mindboard

services:
  apps:
    restart: always
    env_file:
      - ../.env.dev
    environment:
      - CI=true
    build:
      context: ../
      dockerfile: ./docker/Dockerfile
    volumes:
      - /usr/src/app/.turbo
      - /usr/src/app/node_modules
      - /usr/src/app/apps/web/node_modules
      - /usr/src/app/apps/web/.turbo
      - /usr/src/app/apps/core/node_modules
      - /usr/src/app/apps/core/.turbo
      - /usr/src/app/packages/shared/node_modules
      - /usr/src/app/packages/shared/dist
      - ../:/usr/src/app
    command: /bin/bash -c 'pnpm install --prefer-offline --ignore-scripts && pnpm --filter=@mindboard/shared build && pnpm dev'

  database:
    container_name: mindboard-db
    image: postgres:15.4-alpine3.18
    restart: always
    env_file:
      - ../.env.dev
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - ${POSTGRES_PORT}:5432
    volumes:
      - postgres_data:/vat/lib/postgresql/data

  adminer:
    image: adminer:latest
    env_file:
      - ../.env.dev
    restart: always
    ports:
      - 8080:8080

  proxy:
    image: caddy:2.6.4-alpine
    env_file: ../.env.dev
    ports:
      - 80:80
      - 443:443
      - 443:443/udp
    volumes:
      - ./Caddyfile:/etc/caddy/Caddyfile
      - ./certs:/usr/local/etc/caddy/certs
      - caddy_data:/data
      - caddy_config:/config

volumes:
  postgres_data:
  caddy_config:
  caddy_data:
